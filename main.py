from textual.app import App, ComposeResult
from textual.containers import Container, Horizontal, Vertical
from textual.widgets import *
from textual.widget import Widget
from rich.console import Console
from rich.text import Text
from rich import print
from textual.reactive import reactive

gundem = [
    "yazarlarÄ±n favori bilgisayar komutlarÄ±",
    "26 ekim 2022 Ã¼mit Ã¶zdaÄŸ'Ä±n sedat pekerle gÃ¶rÃ¼ÅŸmesi",
    "26 ekim 2022 Ã¼mit Ã¶zdaÄŸ'Ä±n sedat pekerle gÃ¶rÃ¼ÅŸmesi",
    "26 ekim 2022 Ã¼mit Ã¶zdaÄŸ'Ä±n sedat pekerle gÃ¶rÃ¼ÅŸmesi",
    "26 ekim 2022 Ã¼mit Ã¶zdaÄŸ'Ä±n sedat pekerle gÃ¶rÃ¼ÅŸmesi",
    "26 ekim 2022 Ã¼mit Ã¶zdaÄŸ'Ä±n sedat pekerle gÃ¶rÃ¼ÅŸmesi",
    "26 ekim 2022 Ã¼mit Ã¶zdaÄŸ'Ä±n sedat pekerle gÃ¶rÃ¼ÅŸmesi",
    "26 ekim 2022 Ã¼mit Ã¶zdaÄŸ'Ä±n sedat pekerle gÃ¶rÃ¼ÅŸmesi",
    "26 ekim 2022 Ã¼mit Ã¶zdaÄŸ'Ä±n sedat pekerle gÃ¶rÃ¼ÅŸmesi",
    "26 ekim 2022 Ã¼mit Ã¶zdaÄŸ'Ä±n sedat pekerle gÃ¶rÃ¼ÅŸmesi",
    "26 ekim 2022 Ã¼mit Ã¶zdaÄŸ'Ä±n sedat pekerle gÃ¶rÃ¼ÅŸmesi",
    "26 ekim 2022 Ã¼mit Ã¶zdaÄŸ'Ä±n sedat pekerle gÃ¶rÃ¼ÅŸmesi",
    "26 ekim 2022 Ã¼mit Ã¶zdaÄŸ'Ä±n sedat pekerle gÃ¶rÃ¼ÅŸmesi",
]


class Content(Vertical):
    pass


class TopicList(Widget):
    def compose(self) -> ComposeResult:
        for i in sorted(gundem, reverse=True):
            yield Button(i, variant="default")


class QuickIndex(Widget):
    # yield Static("ðŸ’« gÃ¼ndem:")
    def compose(self) -> ComposeResult:
        for i in sorted(gundem, reverse=True):
            yield Button(i, variant="default")


content = """
projelere Ã§alÄ±ÅŸÄ±rken el alÄ±ÅŸkanlÄ±ÄŸÄ± oldu hatta google da surfing takÄ±lÄ±rken istemsizce ctrl+s komutu giriyorum.alÄ±ÅŸkanlÄ±ÄŸÄ± oldu hatta google da surfing takÄ±lÄ±rken istemsizce ctrl+s koalÄ±ÅŸkanlÄ±ÄŸÄ± oldu hatta google da surfing takÄ±lÄ±rken istemsizce...
(bkz: [@click="app.open_link('https://eksisozluk.com/?q=lol')"]lol[/])

(17) Â· 26.10.2022 15:18 Â· [@click="app.open_link('https://eksisozluk.com/biri/yazar')"]@yazar[/]
[on green] â‹® [/] ðŸ”—entry linkini koyala | ðŸ“·ekran gÃ¶rÃ¼ntÃ¼sÃ¼(.svg)

"""


class EntryContent(Widget):
    def compose(self) -> ComposeResult:
        # yield Static(
        #     """[green][@click="app.open_link('https://eksisozluk.com/memur-kalitesinin-artmasi-icin-cozum-onerileri--5912619')"][b]yazarlarÄ±n favori bilgisayar komutlarÄ±[/b][/][/green]"""
        # )
        yield Static(
            """[bold green link=https://eksisozluk.com/memur-kalitesinin-artmasi-icin-cozum-onerileri--5912619]yazarlarÄ±n favori bilgisayar komutlarÄ±[/]"""
        )
        yield Static("1/93")
        yield Static(content * 3)


class Sidebar(Container):
    def compose(self) -> ComposeResult:
        yield Static("Textual Demo")


logotxt = """\
â–ˆâ–€â–€â€ƒâ–ˆâ–„â–€â€ƒâ–ˆâ–€â€ƒâ–ˆâ€ƒâ–€â–ˆâ–€â€ƒâ–ˆâ–‘â–ˆâ€ƒâ–ˆ
â–ˆâ–ˆâ–„â€ƒâ–ˆâ–‘â–ˆâ€ƒâ–„â–ˆâ€ƒâ–ˆâ€ƒâ–‘â–ˆâ–‘â€ƒâ–ˆâ–„â–ˆâ€ƒâ–ˆ"""


class EksiTUIApp(App):
    show_sidebar = reactive(False)
    CSS_PATH = "main.css"
    BINDINGS = [
        ("t", "toggle_dark", "ðŸŽ¨Tema"),
        ("ctrl+b", "toggle_sidebar", "Sidebar"),
        ("ctrl+s", "app.screenshot()", "Screenshot"),
        ("f", "app.arama_focus", "Arama"),
        ("h", "toggle_sidebar2", "HakkÄ±nda"),
        ("f1", "app.toggle_class('TextLog', '-hidden')", "Notes"),
        ("ctrl+c,ctrl+q", "app.quit", "ðŸª§ Ã‡Ä±kÄ±ÅŸ"),
    ]

    def action_open_link(self, link: str) -> None:
        import webbrowser

        webbrowser.open(link)

    def compose(self) -> ComposeResult:
        loggo = Static(logotxt, classes="loggo")
        search_input = Input(placeholder="ara ðŸ”Ž", classes="search_input")
        search_input.cursor_blink = False
        yield Horizontal(loggo, search_input, classes="top")
        # yield Content(QuickIndex())
        entry = EntryContent()
        yield Vertical(
            Horizontal(TopicList(), entry), Sidebar(classes="-hidden"), Footer()
        )

    # def on_button_pressed(self) -> None:
    #     self.exit()

    def action_toggle_dark(self):
        self.dark = not self.dark

    def arama_focus(self):
        print("focus input")

    def action_toggle_sidebar(self) -> None:
        sidebar = self.query_one(Sidebar)
        self.set_focus(None)
        if sidebar.has_class("-hidden"):
            sidebar.remove_class("-hidden")
        else:
            if sidebar.query("*:focus"):
                self.screen.set_focus(None)
            sidebar.add_class("-hidden")


if __name__ == "__main__":
    app = EksiTUIApp()
    app.run()
